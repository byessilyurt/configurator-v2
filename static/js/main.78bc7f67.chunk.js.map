{"version":3,"sources":["components/Drawer.jsx","modelStore.js","modelContext.js","components/Loading.jsx","IDGenerator.js","components/AddForms/OptionGroupInfoAdd.jsx","components/AddForms/OptionsTableAdd.jsx","components/AddForms/OptionGroupAdd.jsx","components/AddForms/StepInfoAdd.jsx","components/OptionGroupInfoForm.jsx","components/Dependency.jsx","components/PriceSelect.jsx","components/RelatedOptions.jsx","components/OptionEditModal.jsx","components/Options.jsx","components/OptionGroups.jsx","components/StepInfoForm.jsx","components/Steps.jsx","components/ModelInfoForm.jsx","components/SaveButton.jsx","components/ModelPicture.jsx","components/ModelCard.jsx","components/Model.jsx","components/Models.jsx","App.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","PermanentDrawer","props","classes","React","useState","mobileOpen","setMobileOpen","className","Divider","List","ListItem","button","onClick","window","location","reload","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","position","Toolbar","IconButton","color","edge","Typography","variant","noWrap","Hidden","xsDown","implementation","Drawer","paper","open","createModelStore","model","updateModel","this","updateModelDetail","field","value","updateModelDetailOneSubfield","subField","updateStepDetail","step","steps","find","el","id","updateOptionGroupDetail","option_group","option_groups","updateOptionDetail","option","options","addStep","stepInfo","push","addOptionGroup","stepID","optionGroupInfo","ModelContext","createContext","ModelProvider","children","modelStore","useLocalObservable","Provider","useModelStore","useContext","Loading","style","justifyContent","alignItems","zIndex","marginTop","fontSize","size","loading","IDGenerator","mod","randomID","currentIDs","map","optG","undefined","opt","Math","floor","random","console","log","OptionGroupInfoAdd","setID","name","title","grid_size","type","sorting","description","group_title","show_group_title","required","hide_title","has_additional","setOptionGroupInfo","useEffect","useObserver","outline","boxShadow","TextField","label","disabled","InputLabelProps","shrink","onChange","e","target","onWheel","blur","FormControl","InputLabel","Select","labelId","MenuItem","FormControlLabel","labelPlacement","control","Switch","checked","multiline","rows","OptionsTableAdd","OptionGroupAdd","optionGroupCount","setOptionGroupCount","buttonColor","ShowAccordions","accordions","i","Accordion","AccordionSummary","expandIcon","sx","border","AccordionDetails","styles","buttonStyles","float","backgroundColor","borderColor","iconStyles","Button","endIcon","a","prev","StepInfoAdd","setStepInfo","component","margin","autoComplete","OptionGroupInfoForm","Dependency","optionInStore","allOptionsInModel","dependentOptionsInStore","dependency","getDependentOptionsInStore","isMulti","placeholder","selectedOptions","backspaceRemovesValue","getOptionLabel","getOptionValue","defaultValue","PriceSelect","priceOptions","price","usd","create","clearable","disabledLabel","values","searchBy","labelField","RelatedOptions","relatedOptionsInStore","related_option","getRelatedOptionsInStore","OptionEditModal","setOpen","handleClose","descriptionElementRef","descriptionElement","current","focus","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","marginBottom","src","picture","url","alt","cover_picture","selected","hidden","image_top","additional","DialogActions","Options","setRows","Set","add","pictureURL","TableContainer","Table","TableHead","TableRow","TableCell","fontWeight","toString","split","toLowerCase","charAt","toUpperCase","slice","TableBody","row","scope","align","paddingLeft","OptionGroups","stepInStore","optionGroupInStore","StepInfoForm","check_scroll","TabPanel","index","other","role","Box","p","Steps","setValue","buttonActive","setButtonActive","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","Tab","ModelInfoForm","store","slug","flat_name","starting_from","standards","standards_rich","prefix","standard_spec","passengers","beam","draft","displacement","berth","fuel","classification","speed","range","engine1_type","engine1_propulsion","engine1_fueltype","engine1_engine","engine1_speed","SaveButton","modelInfo","handleClick","axios","post","then","response","data","Zoom","in","timeout","enter","exit","unmountOnExit","Fab","top","ModelPicture","coverURL","cover","setUpload","pictureChangedHandler","selectedFile","files","htmlFor","ModelCard","modelName","left","Model","fieldRef","useRef","scrollIntoView","behavior","ref","Models","loadingModels","setLoadingModels","loadingModel","setLoadingModel","models","setModels","clickedModel","setClickedModel","axiosPosts","getModelDetail","modelDetail","Card","height","textAlign","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78bc7f67.chunk.js","sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport React from \"react\";\r\n\r\nconst drawerWidth = 200;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\nfunction PermanentDrawer(props) {\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            window.location.reload();\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Models\"} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Configurator\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default PermanentDrawer;\r\n","export function createModelStore() {\r\n  return {\r\n    model: [],\r\n    updateModel(model) {\r\n      this.model = model;\r\n    },\r\n    updateModelDetail(field, value) {\r\n      this.model[field] = value;\r\n    },\r\n    updateModelDetailOneSubfield(field, subField, value) {\r\n      this.model[field][subField] = value;\r\n    },\r\n    updateStepDetail(step, field, value) {\r\n      this.model.steps.find((el) => el.id === step.id)[field] = value;\r\n    },\r\n    updateOptionGroupDetail(step, option_group, field, value) {\r\n      this.model.steps\r\n        .find((el) => el.id === step)\r\n        .option_groups.find((el) => el.id === option_group.id)[field] = value;\r\n    },\r\n    updateOptionDetail(step, option_group, option, field, value) {\r\n      this.model.steps\r\n        .find((el) => el.id === step)\r\n        .option_groups.find((el) => el.id === option_group.id)\r\n        .options.find((el) => el.id === option.id)[field] = value;\r\n    },\r\n    addStep(stepInfo){\r\n      this.model.steps.push(stepInfo)\r\n    },\r\n    addOptionGroup(stepID, optionGroupInfo){\r\n      this.model.steps.find((el) => el.id === stepID).option_groups.push(optionGroupInfo)\r\n    }\r\n  };\r\n}\r\n","import React from 'react'\nimport { createModelStore } from './modelStore'\nimport { useLocalObservable } from 'mobx-react'\n\nconst ModelContext = React.createContext(null)\n\nexport const ModelProvider = ({children}) => {\n  const modelStore = useLocalObservable(createModelStore)\n\n  return <ModelContext.Provider value={modelStore}>\n    {children}\n  </ModelContext.Provider>\n}\n\nexport const useModelStore = () => React.useContext(ModelContext)","import React from \"react\";\r\nimport ClipLoader from \"react-spinners/PropagateLoader\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div\r\n      className=\"app\"\r\n      style={{\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"fixed\",\r\n        zIndex: 1,\r\n        marginLeft: \"41%\",\r\n        marginTop: \"14%\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"loading\"\r\n        style={{\r\n          fontSize: 90,\r\n          position: \"fixed\",\r\n          zIndex: 1,\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <ClipLoader size={20} color={\"#3F51B5\"} loading={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","const IDGenerator = (mod) => {\r\n  const model = mod\r\n  let currentIDs = [];\r\n  model.steps.map((step) => {\r\n    currentIDs.push(step.id);\r\n    step.option_groups.map((optG) => {\r\n      currentIDs.push(optG)\r\n      if(optG.options !== undefined){\r\n        optG.options.map((opt) => {\r\n          currentIDs.push(opt)\r\n        })\r\n      }\r\n    })\r\n  });\r\n    let randomID;\r\n    do {\r\n      randomID = Math.floor(Math.random() * 10000);\r\n      console.log(`Generated ID: ${randomID}`)\r\n    }\r\n    while (currentIDs.find((el) => el === randomID ))\r\n    return randomID\r\n};\r\n\r\nexport default IDGenerator","import React, { useState,useEffect } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { useObserver } from \"mobx-react\";\r\nimport IDGenerator from \"../../IDGenerator\";\r\nimport { useModelStore } from \"../../modelContext\";\r\n\r\nfunction OptionGroupInfoAdd() {\r\n  const modelStore = useModelStore();\r\n  const model = modelStore.model;\r\n  const [id, setID] = useState()\r\n  const [optionGroupInfo, setOptionGroupInfo] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    title: \"\",\r\n    grid_size: \"\",\r\n    type: \"\",\r\n    sorting: undefined,\r\n    description: \"\",\r\n    group_title: \"\",\r\n    show_group_title: false,\r\n    required: false,\r\n    hide_title: false,\r\n    has_additional: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setID(IDGenerator(model));\r\n  }, []);\r\n  return useObserver(() => (\r\n    <Card\r\n      className=\"card\"\r\n      style={{\r\n        marginLeft: \"0px\",\r\n        marginTop: \"10px\",\r\n        outline: \"none\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <div className=\"option-group-info-container\">\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          label=\"ID\"\r\n          value={id}\r\n          disabled\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          label=\"Name\"\r\n          onChange={(e) => {\r\n            setOptionGroupInfo({ ...optionGroupInfo, name: e.target.value });\r\n          }}\r\n          value={optionGroupInfo.name}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          label=\"Title\"\r\n          onChange={(e) => {\r\n            setOptionGroupInfo({ ...optionGroupInfo, title: e.target.value });\r\n          }}\r\n          value={optionGroupInfo.title}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          type=\"number\"\r\n          label=\"Grid Size\"\r\n          onChange={(e) => {\r\n            setOptionGroupInfo({\r\n              ...optionGroupInfo,\r\n              grid_size: e.target.value,\r\n            });\r\n          }}\r\n          onWheel={(e) => e.target.blur()}\r\n          value={optionGroupInfo.grid_size}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          type=\"number\"\r\n          label=\"Sorting\"\r\n          onChange={(e) => {\r\n            setOptionGroupInfo({ ...optionGroupInfo, sorting: e.target.value });\r\n          }}\r\n          onWheel={(e) => e.target.blur()}\r\n          value={optionGroupInfo.sorting}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <FormControl>\r\n          <InputLabel id=\"type\">Type</InputLabel>\r\n          <Select\r\n            labelId=\"type\"\r\n            id=\"demo-simple-select-helper\"\r\n            value={optionGroupInfo.type}\r\n            label=\"Age\"\r\n            onChange={(e) => {\r\n              setOptionGroupInfo({ ...optionGroupInfo, type: e.target.value });\r\n            }}\r\n          >\r\n            <MenuItem value={\"single\"}>Single</MenuItem>\r\n            <MenuItem value={\"multi\"}>Multi</MenuItem>\r\n            <MenuItem value={\"singleImage\"}>Single Image</MenuItem>\r\n            <MenuItem value={\"multiImage\"}>Multi Image</MenuItem>\r\n            <MenuItem value={\"picker\"}>Picker</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <div className=\"form-control-label-container\">\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Required\"\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                checked={optionGroupInfo.required}\r\n                onChange={(e, checked) => {\r\n                  setOptionGroupInfo({\r\n                    ...optionGroupInfo,\r\n                    required: e.target.checked,\r\n                  });\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Hide Title\"\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                checked={optionGroupInfo.hide_title}\r\n                onChange={(e, checked) => {\r\n                  setOptionGroupInfo({\r\n                    ...optionGroupInfo,\r\n                    hide_title: e.target.checked,\r\n                  });\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Has Additional\"\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                checked={optionGroupInfo.has_additional}\r\n                onChange={(e, checked) => {\r\n                  setOptionGroupInfo({\r\n                    ...optionGroupInfo,\r\n                    has_additional: e.target.checked,\r\n                  });\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          label=\"Description\"\r\n          onChange={(e) => {\r\n            setOptionGroupInfo({\r\n              ...optionGroupInfo,\r\n              description: e.target.value,\r\n            });\r\n          }}\r\n          value={optionGroupInfo.description}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          multiline\r\n          rows={4}\r\n        />\r\n        <div>\r\n          <TextField\r\n            className=\"option-group-form\"\r\n            label=\"Group Title\"\r\n            onChange={(e) => {\r\n              setOptionGroupInfo({\r\n                ...optionGroupInfo,\r\n                group_title: e.target.value,\r\n              });\r\n            }}\r\n            value={optionGroupInfo.group_title}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Show Group Title\"\r\n            labelPlacement=\"end\"\r\n            control={\r\n              <Switch\r\n                checked={optionGroupInfo.show_group_title}\r\n                onChange={(e, checked) => {\r\n                  setOptionGroupInfo({\r\n                    ...optionGroupInfo,\r\n                    show_group_title: e.target.checked,\r\n                  });\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  ));\r\n}\r\n\r\nexport default OptionGroupInfoAdd;\r\n","import React, {useState} from 'react'\r\n\r\nfunction OptionsTableAdd() {\r\n  const [optionsCount, setOptionsCount] =useState()\r\n  return (\r\n    <div>\r\n      Hey!\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsTableAdd\r\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport OptionGroupInfoAdd from \"./OptionGroupInfoAdd\";\r\nimport OptionsTableAdd from \"./OptionsTableAdd\";\r\nimport { useModelStore } from \"../../modelContext\";\r\n\r\nfunction OptionGroupAdd(props) {\r\n  const modelStore = useModelStore();\r\n  const addOptionGroup = modelStore.addOptionGroup;\r\n  const step = props.step;\r\n  const [optionGroupCount, setOptionGroupCount] = useState(0);\r\n  const buttonColor = optionGroupCount > 0 ? \"#3F51B5\" : \"#fafafa\";\r\n  const [ID, setID] = useState(0);\r\n\r\n\r\n  const ShowAccordions = () => {\r\n    let accordions = [];\r\n    for (let i = 0; i < optionGroupCount; i++) {\r\n      accordions.push(\r\n        <Accordion className=\"accordion-option-groups\">\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            sx={{ border: \"none\", outline: \"none\" }}\r\n          >\r\n            <Typography className=\"option-group-title\">Type title</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <OptionGroupInfoAdd />\r\n            <OptionsTableAdd />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      );\r\n    }\r\n    return accordions || null;\r\n  };\r\n  const styles = {\r\n    buttonStyles: {\r\n      float: \"left\",\r\n      marginRight: \"0px\",\r\n      marginTop: \"10px\",\r\n      color: \"inherit\",\r\n      backgroundColor: \"white\",\r\n      borderColor: `${buttonColor}`,\r\n      boxShadow: \"none\",\r\n      border: \"0.7px solid #ccc\",\r\n    },\r\n    iconStyles: {\r\n      color: \"#3F51B5\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ShowAccordions />\r\n      <Button\r\n        variant=\"contained\"\r\n        endIcon={<AddIcon style={styles.iconStyles} />}\r\n        style={styles.buttonStyles}\r\n        onClick={async () => {\r\n          setOptionGroupCount((prev) => (prev = prev + 1));\r\n        }}\r\n      >\r\n        Add Option Group\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionGroupAdd;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { Typography } from \"@mui/material\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport OptionGroupAdd from \"./OptionGroupAdd\";\r\nimport { useModelStore } from \"../../modelContext\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\nimport IDGenerator from \"../../IDGenerator\";\r\n\r\nfunction StepInfoAdd() {\r\n  const modelStore = useModelStore();\r\n  const addStep = modelStore.addStep;\r\n  const model = modelStore.model;\r\n  const [stepInfo, setStepInfo] = useState({\r\n    model: `${model}`,\r\n    id: \"\",\r\n    name: \"\",\r\n    title: \"\",\r\n    type: \"\",\r\n    sorting: undefined,\r\n    required: false,\r\n  });\r\n  return useObserver(() => (\r\n    <div>\r\n      <div className=\"step-info-container\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h1\"\r\n            style={{ margin: \"10px 10px\" }}\r\n          >\r\n            Add New Step\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{ backgroundColor: \"white\", float: \"right\" }}\r\n            onClick={() => {\r\n              addStep(stepInfo);\r\n              setStepInfo({\r\n                name: \"\",\r\n                title: \"\",\r\n                type: \"\",\r\n                required: false,\r\n                sorting: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n        <div></div>\r\n        <div></div>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Name\"\r\n          value={24}\r\n          onChange={(e) => {\r\n            setStepInfo({ ...stepInfo, name: e.target.value });\r\n          }}\r\n          variant=\"outlined\"\r\n        ></TextField>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Title\"\r\n          value={stepInfo.title}\r\n          onChange={(e) => {\r\n            setStepInfo({ ...stepInfo, title: e.target.value });\r\n          }}\r\n          variant=\"outlined\"\r\n        ></TextField>\r\n        <FormControl>\r\n          <InputLabel id=\"type\">Type</InputLabel>\r\n          <Select\r\n            labelId=\"type\"\r\n            id=\"demo-simple-select-helper\"\r\n            label=\"Age\"\r\n            value={stepInfo.type}\r\n            onChange={(e) => {\r\n              setStepInfo({ ...stepInfo, type: e.target.value });\r\n            }}\r\n          >\r\n            <MenuItem value={\"Image\"}>Image</MenuItem>\r\n            <MenuItem value={\"Grid\"}>Grid</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Sorting\"\r\n          type=\"number\"\r\n          value={stepInfo.sorting}\r\n          onChange={(e) =>\r\n            setStepInfo({ ...stepInfo, sorting: e.target.value })\r\n          }\r\n          onWheel={(e) => e.target.blur()}\r\n          autoComplete=\"off\"\r\n          variant=\"outlined\"\r\n        ></TextField>\r\n        <div className=\"form-control-label-container\">\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Required\"\r\n            value={stepInfo.required}\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                onClick={(e, checked) => {\r\n                  setStepInfo({ ...stepInfo, required: e.target.value });\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      <OptionGroupAdd />\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default StepInfoAdd;\r\n","import Card from \"@material-ui/core/Card\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useObserver } from \"mobx-react\";\r\nimport \"../styles/optionGroupInfoForm.css\";\r\nimport { useModelStore } from \"../modelContext\";\r\n\r\nfunction OptionGroupInfoForm(props) {\r\n  const modelStore = useModelStore();\r\n  const updateOptionGroupDetail = modelStore.updateOptionGroupDetail;\r\n  const option_group = props.option_group;\r\n  return useObserver(() => (\r\n    <Card\r\n      className=\"card\"\r\n      style={{\r\n        marginLeft: \"0px\",\r\n        marginTop: \"10px\",\r\n        outline: \"none\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <div className=\"option-group-info-container\">\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          label=\"ID\"\r\n          value={option_group.id}\r\n          disabled\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          label=\"Name\"\r\n          onChange={(e) => {\r\n            updateOptionGroupDetail(\r\n              option_group.step,\r\n              option_group,\r\n              \"name\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={option_group.name}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          label=\"Title\"\r\n          onChange={(e) => {\r\n            updateOptionGroupDetail(\r\n              option_group.step,\r\n              option_group,\r\n              \"title\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={option_group.title}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          type=\"number\"\r\n          label=\"Grid Size\"\r\n          onChange={(e) => {\r\n            updateOptionGroupDetail(\r\n              option_group.step,\r\n              option_group,\r\n              \"grid_size\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          onWheel={(e) => e.target.blur()}\r\n          value={option_group.grid_size}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          type=\"number\"\r\n          label=\"Sorting\"\r\n          onChange={(e) => {\r\n            updateOptionGroupDetail(\r\n              option_group.step,\r\n              option_group,\r\n              \"sorting\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          onWheel={(e) => e.target.blur()}\r\n          value={option_group.sorting}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <FormControl>\r\n          <InputLabel id=\"type\">Type</InputLabel>\r\n          <Select\r\n            labelId=\"type\"\r\n            id=\"demo-simple-select-helper\"\r\n            value={option_group.type}\r\n            label=\"Age\"\r\n            onChange={(e) => {\r\n              updateOptionGroupDetail(\r\n                option_group.step,\r\n                option_group,\r\n                \"type\",\r\n                e.target.value\r\n              );\r\n            }}\r\n          >\r\n            <MenuItem value={\"single\"}>Single</MenuItem>\r\n            <MenuItem value={\"multi\"}>Multi</MenuItem>\r\n            <MenuItem value={\"singleImage\"}>Single Image</MenuItem>\r\n            <MenuItem value={\"multiImage\"}>Multi Image</MenuItem>\r\n            <MenuItem value={\"picker\"}>Picker</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <div className=\"form-control-label-container\">\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Required\"\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                checked={option_group.required}\r\n                onChange={(e, checked) => {\r\n                  updateOptionGroupDetail(\r\n                    option_group.step,\r\n                    option_group,\r\n                    \"required\",\r\n                    e.target.checked\r\n                  );\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Hide Title\"\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                checked={option_group.hide_title}\r\n                onChange={(e, checked) => {\r\n                  updateOptionGroupDetail(\r\n                    option_group.step,\r\n                    option_group,\r\n                    \"hide_title\",\r\n                    e.target.checked\r\n                  );\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Has Additional\"\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                checked={option_group.has_additional}\r\n                onChange={(e, checked) => {\r\n                  updateOptionGroupDetail(\r\n                    option_group.step,\r\n                    option_group,\r\n                    \"has_additional\",\r\n                    e.target.checked\r\n                  );\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n        <TextField\r\n          className=\"option-group-form\"\r\n          label=\"Description\"\r\n          onChange={(e) => {\r\n            updateOptionGroupDetail(\r\n              option_group.step,\r\n              option_group,\r\n              \"description\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={option_group.description}\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          multiline\r\n          rows={4}\r\n        />\r\n        <div>\r\n          <TextField\r\n            className=\"option-group-form\"\r\n            label=\"Group Title\"\r\n            onChange={(e) => {\r\n              updateOptionGroupDetail(\r\n                option_group.step,\r\n                option_group,\r\n                \"group_title\",\r\n                e.target.value\r\n              );\r\n            }}\r\n            value={option_group.group_title}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Show Group Title\"\r\n            labelPlacement=\"end\"\r\n            control={\r\n              <Switch\r\n                checked={option_group.show_group_title}\r\n                onChange={(e, checked) => {\r\n                  updateOptionGroupDetail(\r\n                    option_group.step,\r\n                    option_group,\r\n                    \"show_group_title\",\r\n                    e.target.checked\r\n                  );\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  ));\r\n}\r\nexport default OptionGroupInfoForm;\r\n","import React, { useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nfunction Dependency(props) {\r\n  const steps = props.steps;\r\n  const optionInStore = props.optionInStore;\r\n  const allOptionsInModel = [];\r\n  let dependentOptionsInStore = [];\r\n  const getAllOptionsInModel = () => {\r\n    steps.map((step) => {\r\n      if (step.option_groups) {\r\n        step.option_groups.map((option_group) => {\r\n          option_group.options.map((option) => {\r\n            if (option.id !== optionInStore.id) {\r\n              allOptionsInModel.push(option);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const getDependentOptionsInStore = () => {\r\n    try {\r\n      optionInStore.dependency.options.map((option) => {\r\n        dependentOptionsInStore.push(option);\r\n      });\r\n    } catch {\r\n      optionInStore.dependency = {\r\n        options: {},\r\n      };\r\n      console.log(\"no dependent option\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAllOptionsInModel();\r\n    getDependentOptionsInStore();\r\n    return {};\r\n  }, [{optionInStore}]);\r\n  const handleChange = (selectedOptions) => {\r\n    optionInStore.dependency.options = selectedOptions;\r\n    //console.log(optionInStore.dependency.options)\r\n  };\r\n  return (\r\n    <Select\r\n      isMulti\r\n      placeholder={\"Dependent Options\"}\r\n      onChange={(e) => handleChange(e)}\r\n      backspaceRemovesValue\r\n      getOptionLabel={(option) => option.title}\r\n      getOptionValue={(option) => option.id}\r\n      options={allOptionsInModel}\r\n      defaultValue={\"WHITE HULL\"}\r\n    />\r\n  );\r\n}\r\nexport default Dependency;\r\n","import React from 'react'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from 'react-dropdown-select';\r\nimport '../styles/priceSelect.css'\r\n\r\nfunction PriceSelect(props) {\r\n  const option = props.option\r\n  const option_group = props.option_group\r\n  const optionInStore = option_group.options.find(el => el.id === option.id)\r\n  const priceOptions = [\r\n    {option:\"\", disabled:true},\r\n    {option:`Current Price: ${optionInStore.price.usd === -4 ? \"Standard\" : optionInStore.price.usd === undefined ? \"Included\" : optionInStore.price.usd}`, value:`${optionInStore.price.usd}`},\r\n    { option: \"Standard\", value:\"standard\" }, \r\n    { option: \"Included\", value:\"included\" }, \r\n    { option: \"To be decided\", value:\"tbd\"}\r\n  ]\r\n  return (\r\n    <FormControl>\r\n    <Select\r\n      className=\"price-select\"\r\n      type=\"number\"\r\n      create\r\n      clearable\r\n      disabledLabel=\"Choose or Type New Price\"\r\n      placeholder={`Price: ${optionInStore.price.usd === -4 ? \"Standard\" : optionInStore.price.usd === undefined ? \"Included\" : optionInStore.price.usd }`}\r\n      options={priceOptions}\r\n      onChange={(values) => { optionInStore.price.usd = values; console.log(optionInStore.price.usd) }}\r\n      values={[optionInStore.price.usd === -4 ? priceOptions.find(opt => opt.option === \"Standard\") : optionInStore.price.usd === undefined ? priceOptions.find(opt => opt.option === \"Included\"): priceOptions.find(opt => opt.option === `Current Price: ${optionInStore.price.usd}`)]}\r\n      searchBy=\"option\"\r\n      labelField=\"option\"\r\n    />\r\n  </FormControl>\r\n  )\r\n}\r\nexport default PriceSelect\r\n","import React, { useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst RelatedOptions = (props) => {\r\n  const steps = props.steps;\r\n  const optionInStore = props.optionInStore;\r\n  let allOptionsInModel = [];\r\n  let relatedOptionsInStore = [];\r\n  /* FINDS RELATED OPTIONS IN A MODEL, not working. \r\n  const findDefaultVal = () => {\r\n    if (relatedOptionsInStore) {\r\n      relatedOptionsInStore.map((relOp) => {\r\n        allOptionsInModel.find((allOp) => {\r\n          allOp.title === relOp.title && setDefaultVal([...defaultVal, allOp]);\r\n        });\r\n      });\r\n    }\r\n  };\r\n*/\r\n  const getAllOptionsInModel = () => {\r\n    steps.map((step) => {\r\n      if (step.option_groups) {\r\n        step.option_groups.map((option_group) => {\r\n          option_group.options.map((option) => {\r\n            if (option.id !== optionInStore.id) {\r\n              allOptionsInModel.push(option);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    return allOptionsInModel;\r\n  };\r\n  const getRelatedOptionsInStore = () => {\r\n    try {\r\n      optionInStore.related_option.options.map((option) => {\r\n        relatedOptionsInStore.push(option);\r\n      });\r\n    } catch {\r\n      optionInStore.related_option = {\r\n        options: {},\r\n      };\r\n      console.log(\"no related option\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAllOptionsInModel();\r\n    getRelatedOptionsInStore();\r\n    return {};\r\n  }, [{optionInStore}]);\r\n  const handleChange = (selectedOptions) => {\r\n    if (optionInStore.related_option != null)\r\n      optionInStore.related_option.options = selectedOptions;\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      isMulti\r\n      onChange={(e) => handleChange(e)}\r\n      backspaceRemovesValue\r\n      placeholder={\"Related Options\"}\r\n      getOptionLabel={(option) => option.title}\r\n      getOptionValue={(option) => option.id}\r\n      options={allOptionsInModel}\r\n      defaultValue={\"WHITE HULL\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RelatedOptions;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport { useObserver } from \"mobx-react\";\r\nimport * as React from \"react\";\r\nimport \"../styles/optionEditModal.css\";\r\nimport Dependency from \"./Dependency\";\r\nimport PriceSelect from \"./PriceSelect\";\r\nimport RelatedOptions from \"./RelatedOptions\";\r\nimport { useModelStore } from \"../modelContext\";\r\n\r\nexport default function OptionEditModal(props) {\r\n  const modelStore = useModelStore();\r\n  const model = modelStore.model;\r\n  const updateOptionDetail = modelStore.updateOptionDetail;\r\n  const option = props.option;\r\n  const option_group = props.option_group;\r\n  const optionInStore = option_group.options.find((el) => el.id === option.id);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n  return useObserver(() => (\r\n    <div>\r\n      <IconButton aria-label=\"edit\" onClick={handleClickOpen()}>\r\n        <EditIcon />\r\n      </IconButton>\r\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"md\">\r\n        <DialogTitle id=\"scroll-dialog-title\">\r\n          {optionInStore.title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div>\r\n            <div>\r\n              <h4 style={{ marginTop: \"3px\", marginBottom: \"3px\" }}>\r\n                Option Picture\r\n              </h4>\r\n            </div>\r\n            <img\r\n              src={`https://api.nimbusflorida.theonemarineturkey.com/${optionInStore.picture.url}`}\r\n              alt=\"option-img\"\r\n              className=\"option-img\"\r\n            />\r\n          </div>\r\n          {optionInStore.cover_picture && (\r\n            <div>\r\n              <div>\r\n                <h5> Cover Picture </h5>\r\n              </div>\r\n              <img\r\n                src={`https://api.nimbusflorida.theonemarineturkey.com/${optionInStore.cover_picture.url}`}\r\n                alt=\"option-img\"\r\n                className=\"option-img\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"option-modal-container\">\r\n            <TextField\r\n              label=\"ID\"\r\n              value={optionInStore.id}\r\n              disabled\r\n              variant=\"outlined\"\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <TextField\r\n              label=\"Title\"\r\n              onChange={(e) => {\r\n                updateOptionDetail(\r\n                  option_group.step,\r\n                  option_group,\r\n                  option,\r\n                  \"title\",\r\n                  e.target.value\r\n                );\r\n              }}\r\n              value={optionInStore.title}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <TextField\r\n              label=\"Name\"\r\n              onChange={(e) => {\r\n                updateOptionDetail(\r\n                  option_group.step,\r\n                  option_group,\r\n                  option,\r\n                  \"name\",\r\n                  e.target.value\r\n                );\r\n              }}\r\n              value={optionInStore.name}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <TextField\r\n              label=\"Sorting\"\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                updateOptionDetail(\r\n                  option_group.step,\r\n                  option_group,\r\n                  option,\r\n                  \"sorting\",\r\n                  e.target.value\r\n                );\r\n              }}\r\n              onWheel={(e) => e.target.blur()}\r\n              value={optionInStore.sorting}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <PriceSelect option_group={option_group} option={option} />\r\n            <TextField\r\n              label=\"Description\"\r\n              onChange={(e) => {\r\n                updateOptionDetail(\r\n                  option_group.step,\r\n                  option_group,\r\n                  option,\r\n                  \"description\",\r\n                  e.target.value\r\n                );\r\n              }}\r\n              value={optionInStore.description}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </div>\r\n          <div className=\"related-dependency-container\">\r\n            <RelatedOptions optionInStore={optionInStore} steps={model.steps} />\r\n            <Dependency optionInStore={optionInStore} steps={model.steps} />\r\n          </div>\r\n          <div style={{ margin: 20 }}></div>\r\n          <div className=\"form-control-label-container\">\r\n            <FormControlLabel\r\n              className=\"form-control-label\"\r\n              label=\"Required\"\r\n              labelPlacement=\"top\"\r\n              control={\r\n                <Switch\r\n                  checked={optionInStore.required}\r\n                  onChange={(e, checked) => {\r\n                    updateOptionDetail(\r\n                      option_group.step,\r\n                      option_group,\r\n                      option,\r\n                      \"required\",\r\n                      e.target.checked\r\n                    );\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              className=\"form-control-label\"\r\n              label=\"Selected\"\r\n              labelPlacement=\"top\"\r\n              control={\r\n                <Switch\r\n                  checked={optionInStore.selected}\r\n                  onChange={(e, checked) => {\r\n                    updateOptionDetail(\r\n                      option_group.step,\r\n                      option_group,\r\n                      option,\r\n                      \"selected\",\r\n                      e.target.checked\r\n                    );\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              className=\"form-control-label\"\r\n              label=\"Hidden\"\r\n              labelPlacement=\"top\"\r\n              control={\r\n                <Switch\r\n                  checked={optionInStore.hidden}\r\n                  onChange={(e, checked) => {\r\n                    updateOptionDetail(\r\n                      option_group.step,\r\n                      option_group,\r\n                      option,\r\n                      \"hidden\",\r\n                      e.target.checked\r\n                    );\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              className=\"form-control-label\"\r\n              label=\"Image Top\"\r\n              labelPlacement=\"top\"\r\n              control={\r\n                <Switch\r\n                  checked={optionInStore.image_top}\r\n                  onChange={(e, checked) => {\r\n                    updateOptionDetail(\r\n                      option_group.step,\r\n                      option_group,\r\n                      option,\r\n                      \"image_top\",\r\n                      e.target.checked\r\n                    );\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              className=\"form-control-label\"\r\n              label=\"Additional\"\r\n              labelPlacement=\"top\"\r\n              control={\r\n                <Switch\r\n                  checked={optionInStore.additional}\r\n                  onChange={(e, checked) => {\r\n                    updateOptionDetail(\r\n                      option_group.step,\r\n                      option_group,\r\n                      option,\r\n                      \"additional\",\r\n                      e.target.checked\r\n                    );\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  ));\r\n}\r\n","import Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useObserver } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport \"../styles/options.css\";\r\nimport OptionEditModal from \"./OptionEditModal\";\r\n\r\nfunction createData(\r\n  title,\r\n  name,\r\n  id,\r\n  sorting,\r\n  required,\r\n  price,\r\n  pictureURL,\r\n  selected,\r\n) {\r\n  return { title, name, id, sorting, required, price, pictureURL, selected };\r\n}\r\nfunction Options(props) {\r\n  const option_group = props.option_group;\r\n  const model = props.model;\r\n  let setRows = new Set();\r\n  option_group.options.map((option) => {\r\n    return setRows.add(\r\n      createData(\r\n        option.title,\r\n        option.name,\r\n        option.id,\r\n        option.sorting,\r\n        option.required,\r\n        option.price.usd,\r\n        option.picture.url,\r\n        option.selected,\r\n      ),\r\n    );\r\n  });\r\n  return useObserver(() => (\r\n    <TableContainer>\r\n      <Table className=\"options-table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{fontWeight:600, fontSize:14}}>\r\n              {option_group.title.toString().split(\" \").map((e) => {\r\n                return (\r\n                  e.toLowerCase().charAt(0).toUpperCase() +\r\n                  e.slice(1).toLowerCase() +\r\n                  \" \"\r\n                );\r\n              })}\r\n            </TableCell>\r\n            <TableCell>ID</TableCell>\r\n            <TableCell>Price</TableCell>\r\n            <TableCell>Selected</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {[...setRows].map((row) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.title}\r\n              </TableCell>\r\n              <TableCell>{row.id}</TableCell>\r\n              <TableCell>{row.price === -4 ? \"Standart\" : row.price}</TableCell>\r\n              <TableCell align=\"left\" style={{ paddingLeft: \"30px\" }}>\r\n                {row.selected === true ? \"✓\" : \"\"}\r\n              </TableCell>\r\n              <TableCell>\r\n                <OptionEditModal\r\n                  option={row}\r\n                  option_group={option_group}\r\n                  model={model}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  ));\r\n}\r\nexport default Options;\r\n","import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport * as React from \"react\";\r\nimport \"../styles/optionGroups.css\";\r\nimport OptionGroupInfoForm from \"./OptionGroupInfoForm\";\r\nimport Options from \"./Options.jsx\";\r\nimport OptionGroupAdd from \"./AddForms/OptionGroupAdd\";\r\n\r\nexport default function OptionGroups(props) {\r\n  const step = props.step;\r\n  const model = props.model;\r\n  const stepInStore = model.steps.find((el) => el.id === step.id);\r\n  return (\r\n    <div style={{ width: \"96%\", margin: \"auto\" }}>\r\n      <Typography style={{ marginBottom: \"20px\" }}>\r\n        <b style={{ fontSize: \"16px\" }}> Option Groups </b>\r\n      </Typography>\r\n      {step.option_groups !== undefined &&\r\n        step.option_groups.map((option_group) => {\r\n          const optionGroupInStore = stepInStore.option_groups.find(\r\n            (el) => el.id === option_group.id\r\n          );\r\n          return (\r\n            <div>\r\n              <Accordion className=\"accordion-option-groups\">\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  sx={{ border: \"none\", outline: \"none\" }}\r\n                >\r\n                  <Typography className=\"option-group-title\">\r\n                    {optionGroupInStore.title.toLowerCase()}\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <OptionGroupInfoForm option_group={optionGroupInStore} />\r\n                  <Options option_group={optionGroupInStore} model={model} />\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </div>\r\n          );\r\n        })}\r\n      <OptionGroupAdd step ={stepInStore}/>\r\n    </div>\r\n  );\r\n}\r\n","import FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useObserver } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport \"../styles/stepInfoForm.css\";\r\nimport { useModelStore } from \"../modelContext\";\r\n\r\nfunction StepInfoForm(props) {\r\n  const modelStore = useModelStore();\r\n  const model = modelStore.model;\r\n  const updateStepDetail = modelStore.updateStepDetail;\r\n\r\n  const step = props.step;\r\n  const stepInStore = model.steps.find((el) => el.id === step.id);\r\n\r\n  return useObserver(() => (\r\n    <div>\r\n      <Typography style={{ marginBottom: \"20px\" }}>\r\n        <b style={{ fontSize: \"16px\" }}> Edit Step Info </b>\r\n      </Typography>\r\n      <div className=\"step-info-container\">\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Name\"\r\n          onChange={(e) => {\r\n            updateStepDetail(stepInStore, \"name\", e.target.value);\r\n          }}\r\n          value={step.name}\r\n          variant=\"outlined\"\r\n        ></TextField>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Title\"\r\n          onChange={(e) => {\r\n            updateStepDetail(stepInStore, \"title\", e.target.value);\r\n          }}\r\n          value={step.title}\r\n          variant=\"outlined\"\r\n        ></TextField>\r\n        <FormControl>\r\n          <InputLabel id=\"type\">Type</InputLabel>\r\n          <Select\r\n            labelId=\"type\"\r\n            id=\"demo-simple-select-helper\"\r\n            value={stepInStore.type}\r\n            label=\"Age\"\r\n            onChange={(e) => {\r\n              updateStepDetail(stepInStore, \"type\", e.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value={\"Image\"}>Image</MenuItem>\r\n            <MenuItem value={\"Grid\"}>Grid</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Sorting\"\r\n          type=\"number\"\r\n          onChange={(e) => {\r\n            updateStepDetail(stepInStore, \"sorting\", e.target.value);\r\n          }}\r\n          onWheel={(e) => e.target.blur()}\r\n          value={step.sorting}\r\n          variant=\"outlined\"\r\n        ></TextField>\r\n        <div className=\"form-control-label-container\">\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Required\"\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                checked={stepInStore.required}\r\n                onClick={(e) => {\r\n                  updateStepDetail(stepInStore, \"required\", e.target.checked);\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            className=\"form-control-label\"\r\n            label=\"Check Scroll\"\r\n            labelPlacement=\"top\"\r\n            control={\r\n              <Switch\r\n                checked={stepInStore.check_scroll}\r\n                onClick={(e) => {\r\n                  updateStepDetail(\r\n                    stepInStore,\r\n                    \"check_scroll\",\r\n                    e.target.checked\r\n                  );\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\nexport default StepInfoForm;\r\n","import { Box, Button } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport React, { useState } from \"react\";\r\nimport StepInfoAdd from \"./AddForms/StepInfoAdd\";\r\nimport OptionGroups from \"./OptionGroups\";\r\nimport StepInfoForm from \"./StepInfoForm\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={3}>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function Steps(props) {\r\n  const [value, setValue] = useState(0);\r\n  const [buttonActive, setButtonActive] = useState(false);\r\n  const buttonColor = buttonActive ? \"#3F51B5\" : \"#fafafa\";\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n  const model = props.model;\r\n  const styles = {\r\n    buttonStyles: {\r\n      float: \"left\",\r\n      marginRight: \"20px\",\r\n      marginTop: \"10px\",\r\n      color: \"inherit\",\r\n      backgroundColor: \"white\",\r\n      borderColor: `${buttonColor}`,\r\n      boxShadow: \"none\",\r\n      border: \"0.7px solid #ccc\",\r\n    },\r\n    iconStyles: {\r\n      color: \"#3F51B5\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card\">\r\n      <Button\r\n        variant=\"contained\"\r\n        endIcon={<AddIcon style={styles.iconStyles} />}\r\n        style={styles.buttonStyles}\r\n        onClick={() => {\r\n          setValue(null);\r\n          setButtonActive(true);\r\n        }}\r\n      >\r\n        Add Step\r\n      </Button>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n      >\r\n        {model ? (\r\n          model.steps.map((step) => {\r\n            return (\r\n              <Tab\r\n                label={step.title}\r\n                onClick={() => {\r\n                  setButtonActive(false);\r\n                }}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <div>No data</div>\r\n        )}\r\n      </Tabs>\r\n      {buttonActive ? (\r\n        <StepInfoAdd />\r\n      ) : model ? (\r\n        model.steps.map((step, index) => {\r\n          return (\r\n            <div key={step.id}>\r\n              {index === value && (\r\n                <>\r\n                  <TabPanel\r\n                    value={value}\r\n                    index={0}\r\n                    style={{ display: index === value ? \"block\" : \"none\" }}\r\n                  >\r\n                    <StepInfoForm step={step} model={model} />\r\n                  </TabPanel>\r\n                  <Box style={{ display: index === value ? \"block\" : \"none\" }}>\r\n                    <OptionGroups step={step} model={model} />\r\n                  </Box>\r\n                </>\r\n              )}\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <div>No data yet.</div>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, Typography } from \"@material-ui/core\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useObserver } from \"mobx-react\";\r\nimport React from \"react\";\r\n\r\nfunction ModelInfoForm(props) {\r\n  const store = props.store;\r\n  const model = store.model;\r\n  const updateModelDetail = store.updateModelDetail;\r\n  const updateModelDetailOneSubfield = store.updateModelDetailOneSubfield;\r\n\r\n  return useObserver(() => (\r\n    <Card>\r\n      <div className=\"card model-info-container\">\r\n        <Typography style={{ marginBottom: \"20px\" }}>\r\n          <b style={{ fontSize: \"16px\" }}> Edit Model Info </b>\r\n        </Typography>\r\n        <div></div>\r\n        <div></div>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"ID\"\r\n          disabled\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          value={model.id}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"Slug\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetail(\"slug\", e.target.value);\r\n          }}\r\n          value={model.slug}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetail(\"name\", e.target.value);\r\n          }}\r\n          value={model.name}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"Flat Name\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetail(\"flat_name\", e.target.value);\r\n          }}\r\n          value={model.flat_name}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"Sorting\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          type=\"number\"\r\n          onChange={(e) => {\r\n            updateModelDetail(\"sorting\", e.target.value);\r\n          }}\r\n          onWheel={(e) => e.target.blur()}\r\n          value={model.sorting}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"Starting From\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          type=\"number\"\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"starting_from\",\r\n              \"usd\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          onWheel={(e) => e.target.blur()}\r\n          value={model.starting_from.usd}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"Standards\"\r\n          rows={4}\r\n          multiline\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetail(\"standards\", e.target.value);\r\n          }}\r\n          value={model.standards}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"Standard Rich\"\r\n          rows={4}\r\n          multiline\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetail(\"standards_rich\", e.target.value);\r\n          }}\r\n          value={model.standards_rich}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"model-info\"\r\n          label=\"Prefix\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetail(\"prefix\", e.target.value);\r\n          }}\r\n          value={model.prefix}\r\n        ></TextField>\r\n      </div>\r\n      <div className=\"card model-info-container\">\r\n        <Typography style={{ marginBottom: \"5px\" }}>\r\n          Standard Specifications\r\n        </Typography>\r\n        <div></div>\r\n        <div></div>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Passengers\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"passengers\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.passengers}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Beam\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"beam\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.beam}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Draft\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"draft\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.draft}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Displacement\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"displacement\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.displacement}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Berth\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"berth\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.berth}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Fuel\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"fuel\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.fuel}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Classification\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"classification\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.classification}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Speed\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"speed\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.speed}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Range\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"range\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.range}\r\n        ></TextField>\r\n      </div>\r\n      <div className=\"card model-info-container\">\r\n        <Typography style={{ marginBottom: \"5px\" }}>Engine 1</Typography>\r\n        <div></div>\r\n        <div></div>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Type\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"engine1_type\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.engine1_type}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Propulsion\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"engine1_propulsion\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.engine1_propulsion}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Fuel Type\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"engine1_fueltype\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.engine1_fueltype}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Engine\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"engine1_engine\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.engine1_engine}\r\n        ></TextField>\r\n        <TextField\r\n          className=\"spec-info\"\r\n          label=\"Speed\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={(e) => {\r\n            updateModelDetailOneSubfield(\r\n              \"standard_spec\",\r\n              \"engine1_speed\",\r\n              e.target.value\r\n            );\r\n          }}\r\n          value={model.standard_spec.engine1_speed}\r\n        ></TextField>\r\n      </div>\r\n    </Card>\r\n  ));\r\n}\r\nexport default ModelInfoForm;\r\n","import { Fab, Zoom } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useModelStore } from \".././modelContext\";\r\n\r\nfunction SaveButton() {\r\n  const modelStore = useModelStore();\r\n  const model = modelStore.model;\r\n  const modelInfo = {\r\n    slug: model.slug,\r\n    id: model.id,\r\n    name: model.name,\r\n    flat_name: model.flat_name,\r\n    sorting: model.sorting,\r\n    standards: model.standards,\r\n    standards_rich: model.standards_rich,\r\n    standard_spec: {\r\n      passengers: model.standard_spec.passengers,\r\n      beam: model.standard_spec.beam,\r\n      draft: model.standard_spec.draft,\r\n      displacement: model.standard_spec.displacement,\r\n      berth: model.standard_spec.berth,\r\n    },\r\n  };\r\n\r\n  const handleClick = async (model) => {\r\n    await axios\r\n      .post(`http://localhost:8000/models/`, modelInfo)\r\n      .then((response) => console.log(response.data));\r\n    model.steps.map(async (step) => {\r\n      await axios\r\n        .post(\"http://localhost:8000/steps/\", step)\r\n        .then((response) => console.log(response));\r\n      step.option_groups.map(async (option_group) => {\r\n        await axios\r\n          .post(\"http://localhost:8000/option-groups/\", option_group)\r\n          .then((response) => console.log(response));\r\n        option_group.options.map(async (option) => {\r\n          await axios\r\n            .post(\"http://localhost:8000/options/\", option)\r\n            .then((response) => console.log(response));\r\n        });\r\n      });\r\n    });\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div>\r\n      <Zoom in={true} timeout={{ enter: 500, exit: 500 }} unmountOnExit>\r\n        <Fab\r\n          onClick={() => handleClick(model)}\r\n          color=\"primary\"\r\n          variant=\"extended\"\r\n          size=\"large\"\r\n          style={{\r\n            position: \"fixed\",\r\n            color: \"#3F51B5\",\r\n            backgroundColor: \"white\",\r\n            zIndex: 3000,\r\n            top: 8,\r\n            marginLeft: \"75%\",\r\n          }}\r\n        >\r\n          <SaveIcon />\r\n          Save\r\n        </Fab>\r\n      </Zoom>\r\n    </div>\r\n  );\r\n}\r\nexport default SaveButton;\r\n","import { useObserver } from 'mobx-react'\nimport React, { useState } from 'react'\nimport { Card, Typography } from '@material-ui/core';\nimport { useModelStore } from '../modelContext';\nimport Button from '@mui/material/Button';\n\nfunction ModelPicture(props) {\n  const modelStore = useModelStore()\n  const pictureURL = props.pictureURL\n  const coverURL = props.coverURL\n  const [upload, setUpload] = useState({\n    picture: null,\n    cover: null,\n  })\n  const pictureChangedHandler = (event) => {\n    setUpload({ selectedFile: event.target.files[0] })\n  }\n  const pictureUploadHandler = () => {\n    const formData = new FormData()\n    formData.append(\n      'myFile',\n      upload.picture,\n    )\n    console.log(modelStore.model.picture)\n    modelStore.model.picture = formData\n    console.log(modelStore.model.picture)\n  }\n  return useObserver(() => (\n    <Card className=\"card image-container\">\n      <div>\n        <div style={{ width: \"90%\" }}>\n          <Typography style={{ float: \"left\" }}>Picture </Typography>\n          <label htmlFor=\"upload-picture\" style={{float:\"right\"}}>\n            <input id=\"upload-picture\" type=\"file\" onChange={pictureChangedHandler} style={{display:\"none\"}} />\n            <Button variant=\"contained\" color=\"inherit\" component=\"span\">\n              Upload Picture\n            </Button>\n          </label>\n        </div>\n        <img src={`https://api.nimbusflorida.theonemarineturkey.com/${pictureURL}`} alt=\"picture\">\n        </img>\n      </div>\n      <div>\n        <div style={{ width: \"90%\" }}>\n          <Typography style={{ float: \"left\" }}>Cover </Typography>\n          <label htmlFor=\"upload-cover\"  style={{float:\"right\"}}>\n            <input id=\"upload-cover\" type=\"file\" style={{display:\"none\"}} />\n            <Button variant=\"contained\" color=\"inherit\" component=\"span\">\n              Upload Cover\n            </Button>\n          </label>\n        </div>\n        <img src={`https://api.nimbusflorida.theonemarineturkey.com/${coverURL}`} alt=\"cover\">\n        </img>\n      </div>\n    </Card>\n  ))\n}\nexport default ModelPicture\n","import { Fab, Zoom } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport \"../styles/modelCard.css\";\r\n\r\nfunction ModelCard(props) {\r\n  const modelName = props.name;\r\n  return (\r\n    <div className=\"model-card-container\">\r\n      <Zoom in={true} timeout={{ enter: 500, exit: 500 }} unmountOnExit>\r\n        <Fab\r\n          variant=\"extended\"\r\n          disabled\r\n          className=\"model-card\"\r\n          size=\"large\"\r\n          style={{\r\n            position: \"fixed\",\r\n            color: \"#3F51B5\",\r\n            backgroundColor: \"white\",\r\n            zIndex: 3000,\r\n            top: 8,\r\n            left: 20,\r\n          }}\r\n        >\r\n          Editing {modelName}\r\n        </Fab>\r\n      </Zoom>\r\n    </div>\r\n  );\r\n}\r\nexport default ModelCard;\r\n","import React from \"react\";\nimport \"../styles/model.css\";\nimport Steps from \"./Steps.jsx\";\nimport ModelInfoForm from \"./ModelInfoForm\";\nimport SaveButton from \"./SaveButton\";\nimport ModelPicture from \"./ModelPicture\";\nimport { useModelStore } from \"../modelContext\";\nimport { useObserver } from \"mobx-react\";\nimport ModelCard from \"./ModelCard\";\n\nexport default function Model() {\n  const modelStore = useModelStore();\n  const model = modelStore.model;\n  const pictureURL = model.picture.url;\n  const coverURL = model.cover.url;\n  const fieldRef = React.useRef(null);\n  React.useEffect(() => {\n    fieldRef.current.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  }, [model]);\n  return useObserver(() => (\n    <div id=\"Model\" className=\"field\" ref={fieldRef}>\n      <SaveButton />\n      <ModelCard name={model.name} />\n      <ModelInfoForm store={modelStore} />\n      <ModelPicture pictureURL={pictureURL} coverURL={coverURL} />\n      <Steps model={model} />\n    </div>\n  ));\n}\n","import {\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useModelStore } from \".././modelContext\";\r\nimport \"../styles/models.css\";\r\nimport Loading from \"./Loading.jsx\";\r\nimport Model from \"./Model.jsx\";\r\n\r\nfunction Models() {\r\n  const [loadingModels, setLoadingModels] = useState(false);\r\n  const [loadingModel, setLoadingModel] = useState(false);\r\n  const [models, setModels] = useState();\r\n  const [clickedModel, setClickedModel] = useState();\r\n  const modelStore = useModelStore();\r\n  useEffect(() => {\r\n    const axiosPosts = async () => {\r\n      setLoadingModels(true);\r\n      const response = await axios(\r\n        \"https://api.nimbusflorida.theonemarineturkey.com/models?_sort=sorting:asc\"\r\n      );\r\n      setModels(response.data);\r\n      setLoadingModels(false);\r\n    };\r\n    axiosPosts();\r\n  }, []);\r\n  const getModelDetail = async (model) => {\r\n    setLoadingModel(true);\r\n    const response = await axios(\r\n      `https://api.nimbusflorida.theonemarineturkey.com/models/byslug/${model.slug}`\r\n    );\r\n    const modelDetail = response.data;\r\n    modelStore.updateModel(modelDetail);\r\n    setClickedModel(modelDetail);\r\n    setLoadingModel(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {loadingModels ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          {loadingModel && <Loading />}\r\n          <Card className=\"card\">\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow align=\"center\">\r\n                  <span style={{ fontSize: \"24px\" }}>\r\n                    Edit Your <b style={{ fontSize: \"24px\" }}>Nimbus</b>\r\n                  </span>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                <div className=\"models-info-container\">\r\n                  {models &&\r\n                    models.map((model) => {\r\n                      return (\r\n                        <TableCell\r\n                          key={model.id}\r\n                          className=\"models\"\r\n                          onClick={() => {\r\n                            getModelDetail(model);\r\n                            setLoadingModel(true);\r\n                          }}\r\n                        >\r\n                          <div align=\"center\">\r\n                            <img\r\n                              src={`https://api.nimbusflorida.theonemarineturkey.com/${model.picture.url}`}\r\n                              style={{ width: \"60%\", height: \"30%\" }}\r\n                            />\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                              {model.name}\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                </div>\r\n              </TableBody>\r\n            </Table>\r\n          </Card>\r\n        </div>\r\n      )}\r\n      {clickedModel && (\r\n        <div>\r\n          <Model />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Models;\r\n","import * as React from 'react';\nimport PermanentDrawer from './components/Drawer.jsx';\nimport Models from './components/Models.jsx';\nimport './App.css';\n\n\nfunction App() {\n  return (<>\n      <PermanentDrawer/>\n      <div className=\"model\">\n      <Models />\n      </div>\n      </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ModelProvider } from \"./modelContext\";\r\nReactDOM.render(\r\n  <ModelProvider>\r\n    <App />\r\n  </ModelProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}